num aaaa = 3 + 4
num a = 3 + 4.0 * 4 + 5 / 2 % 2 * 3
num b = 4 - 3
num c = a * b + a ^ 2
num d = 3.0 / 2.2
num e = 4.2 % 3.2
list<num> myList = {1, 2, 3, 4, 5}
dictionary<text, num> myDictionary = { { "one", 1}, {"two", 2} , {"three", 3}}
dictionary<text, num> myDictionary2

func void run() {
    text test = "yaybrozz"
    d = 2555.5
    d++
    d--
    num loopVariable = 5
    for (num i = 0; i < 5; i++) {
        text yeety = "yeety"
    }

    do {
         loopVariable--
         text yeety = "yeety"
    } while(loopVariable > 5)

    while (loopVariable == 0) {
        text yeety = "yeety"
        loopVariable++
    }


    num yy = robot.health() % 2

    myList.add(5)

    num xyzzzz = myList.length()
}

func void testFunction(text myText, num myNumber, bool myBoolean, text yayyyy) {
   /* bool y = true
    bool x = false
    bool xy = 2 <= 2 && x
    bool xy2 = y || x
    bool xy3 = y == x
    bool xy4 = y != x
    bool xy5 = 1 >= 5
    bool xy6 = 5 > 1
    bool xy7 = 5 <= 2
    bool xy8 = 5 < 2 */
    testFunction("12", 12, true, "yess")
    robot.fire(5)
    robot.ahead(5)
    robot.back(5)
    //robot.changeStrategy("yeet")
}


func void myTesting() {
    num x = 1
    if (x == 1) {
        text amIf = "ytes"
    } else if (x == 2) {
        text elseIf = "yasd"
    } else if (x == 3) {
        text amElseIf2 = "asda"
    } else {
        text amElse = "yes"
    }
}

func bool shouldFire(ScannedRobotEvent e) {
    return true
}

event myevent {
    return true
}
event testEvent {
    return robot.health() < 50
}

strategy defaultz {
    behavior onRun() {
        num xxx = 5
        xxx = 5 + 2

        robot.ahead(10)
        robot.fire(3)
        robot.back(10)
        robot.fire(3)

        while (robot.health() > 50) {
            robot.turnGunRight(10)
        }
    }

    behavior onScannedRobot(ScannedRobotEvent e) {
        if (shouldFire(e)) {
            robot.turnRight(e.getBearing())
            robot.fire(3)
        }
        robot.scan()
    }

    behavior onLowHealth()  {
        robot.changeStrategy("defensive")
    }

    behavior onWin() {
        num amountzz = 0

        do {
            num x = 5
            amountzz++
        } while(amountzz == 0)
    }

    behavior onLose() {
        //text loseText = "Fuck you!"
        for (num b = 0; b < 10; b++) {
            //print(loseText)
        }
    }
}

strategy defensive {
	behavior onRun() {
		robot.ahead(200)
		robot.fire(3)
		robot.back(200)
		robot.fire(3)
    }
}